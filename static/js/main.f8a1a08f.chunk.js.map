{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","index","monster","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","this","filter","toLowerCase","includes","fetch","then","response","json","filterMonsters","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAGaA,EAAO,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,MAAhC,eACtB,6BAAKJ,EAAMK,QAAQC,OACnB,6BAAKN,EAAMK,QAAQE,YCJZC,G,MAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SAEID,EAAMS,SAASC,KAAI,SAACL,EAASD,GAC3B,OACE,cAAC,EAAD,CAAkBA,MAAOA,EAAOC,QAASA,GAA9BD,UCPVO,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAEtC,OACE,uBACEC,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCDG,G,wDAtCb,aAAe,IAAD,8BACZ,gBAWFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAXrC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,kDAOd,WAAkB,IAAD,OACf,OAAOI,KAAKD,MAAMb,SAASe,QAAO,SAACnB,GACjC,OAAOA,EAAQC,KAAKmB,cAAcC,SAAS,EAAKJ,MAAMH,YAAYM,oB,+BAMtE,WAAqB,IAAD,OAClBE,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GACJ,EAAKX,SAAS,CACZT,SAAUoB,S,oBAIhB,WAEE,OACE,sBAAK5B,UAAU,MAAf,UACE,cAAC,EAAD,CACEW,YAAa,kBACbC,aAAcU,KAAKV,eAErB,cAAC,EAAD,CAAUJ,SAAUc,KAAKQ,0B,GAjCfC,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f8a1a08f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img alt=\"Monster\" src={`https://robohash.org/${props.index}?set=set1`} />\r\n      <h3>{props.monster.name}</h3>\r\n      <h4>{props.monster.email}</h4>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {\r\n        props.monsters.map((monster, index) => {\r\n          return (\r\n            <Card key={index} index={index} monster={monster} />\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => {\r\n\r\n  return (\r\n    <input \r\n      type=\"search\" \r\n      placeholder={placeholder} \r\n      onChange={handleChange}\r\n    />\r\n  )\r\n\r\n}\r\n\r\n","import { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n  filterMonsters() {\n    return this.state.monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(this.state.searchField.toLowerCase());\n    })\n  }\n  handleChange = (e) => {\n    this.setState({searchField: e.target.value});\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(response => {\n      this.setState({\n        monsters: response\n      })\n    })\n  }\n  render() {\n    \n    return (\n      <div className=\"App\">\n        <SearchBox \n          placeholder={'search monsters'}\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={this.filterMonsters()} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}